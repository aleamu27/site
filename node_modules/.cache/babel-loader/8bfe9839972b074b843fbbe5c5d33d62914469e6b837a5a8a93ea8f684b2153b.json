{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderamundsen/Documents/site/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase, isSupabaseConfigured } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    // Get session\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      var _session$user;\n      setSession(session);\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n      if (session !== null && session !== void 0 && session.user) {\n        fetchProfile(session.user.id);\n      }\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user2;\n      setSession(session);\n      setUser((_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null);\n      if (session !== null && session !== void 0 && session.user) {\n        fetchProfile(session.user.id);\n        // Log session creation\n        logSecurityEvent('login', {\n          method: 'session'\n        });\n      } else {\n        setProfile(null);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const fetchProfile = async userId => {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').select('*').eq('id', userId).single();\n    if (!error && data) {\n      setProfile(data);\n    }\n  };\n  const logSecurityEvent = async (action, details = {}) => {\n    if (!user) return;\n    try {\n      await supabase.rpc('log_security_event', {\n        p_user_id: user.id,\n        p_action: action,\n        p_details: details,\n        p_ip_address: null,\n        // Would get from server\n        p_user_agent: navigator.userAgent\n      });\n    } catch (error) {\n      console.error('Failed to log security event:', error);\n    }\n  };\n  const value = {\n    user,\n    profile,\n    session,\n    loading,\n    logSecurityEvent\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"fJESv9dZ9H9qGOnZJbXKgSW+0Yw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","isSupabaseConfigured","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","profile","setProfile","loading","setLoading","session","setSession","auth","getSession","then","data","_session$user","fetchProfile","id","subscription","onAuthStateChange","_event","_session$user2","logSecurityEvent","method","unsubscribe","userId","error","from","select","eq","single","action","details","rpc","p_user_id","p_action","p_details","p_ip_address","p_user_agent","navigator","userAgent","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexanderamundsen/Documents/site/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase, isSupabaseConfigured } from '../lib/supabase';\n\nconst AuthContext = createContext({});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    // Get session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      if (session?.user) {\n        fetchProfile(session.user.id);\n      }\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      if (session?.user) {\n        fetchProfile(session.user.id);\n        // Log session creation\n        logSecurityEvent('login', { method: 'session' });\n      } else {\n        setProfile(null);\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const fetchProfile = async (userId) => {\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (!error && data) {\n      setProfile(data);\n    }\n  };\n\n  const logSecurityEvent = async (action, details = {}) => {\n    if (!user) return;\n    \n    try {\n      await supabase.rpc('log_security_event', {\n        p_user_id: user.id,\n        p_action: action,\n        p_details: details,\n        p_ip_address: null, // Would get from server\n        p_user_agent: navigator.userAgent\n      });\n    } catch (error) {\n      console.error('Failed to log security event:', error);\n    }\n  };\n\n  const value = {\n    user,\n    profile,\n    session,\n    loading,\n    logSecurityEvent\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}