{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = 'https://ziksrslyraqhygilcvct.supabase.co';\n// Try both React and Next.js naming conventions\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Debug logging (remove this after fixing)\nconsole.log('Supabase Debug:', {\n  hasKey: !!supabaseKey,\n  keyLength: supabaseKey ? supabaseKey.length : 0,\n  envVars: Object.keys(process.env).filter(key => key.includes('SUPABASE')),\n  reactKey: !!process.env.REACT_APP_SUPABASE_KEY,\n  nextKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  supabaseClient: !!supabase\n});\n\n// Only create client if we have the key (production) or provide a fallback\nexport const supabase = supabaseKey ? createClient(supabaseUrl, supabaseKey) : null;\n\n// Helper function to check if Supabase is properly configured\nexport const isSupabaseConfigured = () => {\n  return supabaseUrl && supabaseKey && supabase !== null;\n};","map":{"version":3,"names":["createClient","supabaseUrl","supabaseKey","process","env","REACT_APP_SUPABASE_KEY","NEXT_PUBLIC_SUPABASE_ANON_KEY","console","log","hasKey","keyLength","length","envVars","Object","keys","filter","key","includes","reactKey","nextKey","supabaseClient","supabase","isSupabaseConfigured"],"sources":["/Users/alexanderamundsen/Documents/site/src/lib/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://ziksrslyraqhygilcvct.supabase.co'\n// Try both React and Next.js naming conventions\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\n// Debug logging (remove this after fixing)\nconsole.log('Supabase Debug:', {\n  hasKey: !!supabaseKey,\n  keyLength: supabaseKey ? supabaseKey.length : 0,\n  envVars: Object.keys(process.env).filter(key => key.includes('SUPABASE')),\n  reactKey: !!process.env.REACT_APP_SUPABASE_KEY,\n  nextKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  supabaseClient: !!supabase\n})\n\n// Only create client if we have the key (production) or provide a fallback\nexport const supabase = supabaseKey \n  ? createClient(supabaseUrl, supabaseKey)\n  : null\n\n// Helper function to check if Supabase is properly configured\nexport const isSupabaseConfigured = () => {\n  return supabaseUrl && supabaseKey && supabase !== null\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAG,0CAA0C;AAC9D;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAIF,OAAO,CAACC,GAAG,CAACE,6BAA6B;;AAEnG;AACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;EAC7BC,MAAM,EAAE,CAAC,CAACP,WAAW;EACrBQ,SAAS,EAAER,WAAW,GAAGA,WAAW,CAACS,MAAM,GAAG,CAAC;EAC/CC,OAAO,EAAEC,MAAM,CAACC,IAAI,CAACX,OAAO,CAACC,GAAG,CAAC,CAACW,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAC;EACzEC,QAAQ,EAAE,CAAC,CAACf,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC9Cc,OAAO,EAAE,CAAC,CAAChB,OAAO,CAACC,GAAG,CAACE,6BAA6B;EACpDc,cAAc,EAAE,CAAC,CAACC;AACpB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMA,QAAQ,GAAGnB,WAAW,GAC/BF,YAAY,CAACC,WAAW,EAAEC,WAAW,CAAC,GACtC,IAAI;;AAER;AACA,OAAO,MAAMoB,oBAAoB,GAAGA,CAAA,KAAM;EACxC,OAAOrB,WAAW,IAAIC,WAAW,IAAImB,QAAQ,KAAK,IAAI;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}