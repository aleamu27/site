{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderamundsen/Documents/site/src/components/Auth/SessionManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../../lib/supabase';\nimport { useAuth } from '../../contexts/AuthContext';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionWarning = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #fff3e0;\n  border: 1px solid #ffb74d;\n  border-radius: 8px;\n  padding: 1rem 1.5rem;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  z-index: 1000;\n`;\n_c = SessionWarning;\nconst SessionButton = styled.button`\n  background: #ff6f00;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  margin-left: 1rem;\n  cursor: pointer;\n  font-weight: 600;\n  \n  &:hover {\n    background: #e65100;\n  }\n`;\n_c2 = SessionButton;\nconst SessionManager = () => {\n  _s();\n  const {\n    user,\n    session\n  } = useAuth();\n  const [showWarning, setShowWarning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null);\n  useEffect(() => {\n    if (!session) return;\n    const checkSession = async () => {\n      const sessionToken = localStorage.getItem('session_token');\n      if (!sessionToken) return;\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('user_sessions').select('*').eq('session_token', sessionToken).eq('is_active', true).single();\n        if (data) {\n          const expiresAt = new Date(data.expires_at);\n          const now = new Date();\n          const minutesLeft = Math.floor((expiresAt - now) / 60000);\n\n          // Show warning when 5 minutes left\n          if (minutesLeft <= 5 && minutesLeft > 0) {\n            setShowWarning(true);\n            setTimeLeft(minutesLeft);\n          } else if (minutesLeft <= 0) {\n            // Session expired\n            await handleLogout();\n          }\n\n          // Update last activity\n          await supabase.from('user_sessions').update({\n            last_activity: new Date().toISOString()\n          }).eq('session_token', sessionToken);\n        }\n      } catch (err) {\n        console.error('Session check error:', err);\n      }\n    };\n\n    // Check session every minute\n    const interval = setInterval(checkSession, 60000);\n    checkSession(); // Initial check\n\n    return () => clearInterval(interval);\n  }, [session]);\n  const handleLogout = async () => {\n    const sessionToken = localStorage.getItem('session_token');\n\n    // Mark session as inactive\n    if (sessionToken) {\n      await supabase.from('user_sessions').update({\n        is_active: false\n      }).eq('session_token', sessionToken);\n    }\n\n    // Log security event\n    if (user) {\n      await supabase.rpc('log_security_event', {\n        p_user_id: user.id,\n        p_action: 'logout',\n        p_details: {\n          reason: 'session_expired'\n        },\n        p_ip_address: null,\n        p_user_agent: navigator.userAgent\n      });\n    }\n    localStorage.removeItem('session_token');\n    await supabase.auth.signOut();\n  };\n  const extendSession = async () => {\n    const sessionToken = localStorage.getItem('session_token');\n    if (!sessionToken) return;\n    const newExpiresAt = new Date();\n    newExpiresAt.setHours(newExpiresAt.getHours() + 24);\n    try {\n      await supabase.from('user_sessions').update({\n        expires_at: newExpiresAt.toISOString(),\n        last_activity: new Date().toISOString()\n      }).eq('session_token', sessionToken);\n      setShowWarning(false);\n    } catch (err) {\n      console.error('Failed to extend session:', err);\n    }\n  };\n  if (!showWarning) return null;\n  return /*#__PURE__*/_jsxDEV(SessionWarning, {\n    children: [\"Your session will expire in \", timeLeft, \" minutes.\", /*#__PURE__*/_jsxDEV(SessionButton, {\n      onClick: extendSession,\n      children: \"Extend Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(SessionManager, \"faD54oOLGPfdR0QTR3vmpGtupTA=\", false, function () {\n  return [useAuth];\n});\n_c3 = SessionManager;\nexport default SessionManager;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SessionWarning\");\n$RefreshReg$(_c2, \"SessionButton\");\n$RefreshReg$(_c3, \"SessionManager\");","map":{"version":3,"names":["React","useEffect","useState","supabase","useAuth","styled","jsxDEV","_jsxDEV","SessionWarning","div","_c","SessionButton","button","_c2","SessionManager","_s","user","session","showWarning","setShowWarning","timeLeft","setTimeLeft","checkSession","sessionToken","localStorage","getItem","data","error","from","select","eq","single","expiresAt","Date","expires_at","now","minutesLeft","Math","floor","handleLogout","update","last_activity","toISOString","err","console","interval","setInterval","clearInterval","is_active","rpc","p_user_id","id","p_action","p_details","reason","p_ip_address","p_user_agent","navigator","userAgent","removeItem","auth","signOut","extendSession","newExpiresAt","setHours","getHours","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/alexanderamundsen/Documents/site/src/components/Auth/SessionManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../../lib/supabase';\nimport { useAuth } from '../../contexts/AuthContext';\nimport styled from 'styled-components';\n\nconst SessionWarning = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #fff3e0;\n  border: 1px solid #ffb74d;\n  border-radius: 8px;\n  padding: 1rem 1.5rem;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  z-index: 1000;\n`;\n\nconst SessionButton = styled.button`\n  background: #ff6f00;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  margin-left: 1rem;\n  cursor: pointer;\n  font-weight: 600;\n  \n  &:hover {\n    background: #e65100;\n  }\n`;\n\nconst SessionManager = () => {\n  const { user, session } = useAuth();\n  const [showWarning, setShowWarning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null);\n\n  useEffect(() => {\n    if (!session) return;\n\n    const checkSession = async () => {\n      const sessionToken = localStorage.getItem('session_token');\n      if (!sessionToken) return;\n\n      try {\n        const { data, error } = await supabase\n          .from('user_sessions')\n          .select('*')\n          .eq('session_token', sessionToken)\n          .eq('is_active', true)\n          .single();\n\n        if (data) {\n          const expiresAt = new Date(data.expires_at);\n          const now = new Date();\n          const minutesLeft = Math.floor((expiresAt - now) / 60000);\n\n          // Show warning when 5 minutes left\n          if (minutesLeft <= 5 && minutesLeft > 0) {\n            setShowWarning(true);\n            setTimeLeft(minutesLeft);\n          } else if (minutesLeft <= 0) {\n            // Session expired\n            await handleLogout();\n          }\n\n          // Update last activity\n          await supabase\n            .from('user_sessions')\n            .update({ last_activity: new Date().toISOString() })\n            .eq('session_token', sessionToken);\n        }\n      } catch (err) {\n        console.error('Session check error:', err);\n      }\n    };\n\n    // Check session every minute\n    const interval = setInterval(checkSession, 60000);\n    checkSession(); // Initial check\n\n    return () => clearInterval(interval);\n  }, [session]);\n\n  const handleLogout = async () => {\n    const sessionToken = localStorage.getItem('session_token');\n    \n    // Mark session as inactive\n    if (sessionToken) {\n      await supabase\n        .from('user_sessions')\n        .update({ is_active: false })\n        .eq('session_token', sessionToken);\n    }\n\n    // Log security event\n    if (user) {\n      await supabase.rpc('log_security_event', {\n        p_user_id: user.id,\n        p_action: 'logout',\n        p_details: { reason: 'session_expired' },\n        p_ip_address: null,\n        p_user_agent: navigator.userAgent\n      });\n    }\n\n    localStorage.removeItem('session_token');\n    await supabase.auth.signOut();\n  };\n\n  const extendSession = async () => {\n    const sessionToken = localStorage.getItem('session_token');\n    if (!sessionToken) return;\n\n    const newExpiresAt = new Date();\n    newExpiresAt.setHours(newExpiresAt.getHours() + 24);\n\n    try {\n      await supabase\n        .from('user_sessions')\n        .update({ \n          expires_at: newExpiresAt.toISOString(),\n          last_activity: new Date().toISOString()\n        })\n        .eq('session_token', sessionToken);\n\n      setShowWarning(false);\n    } catch (err) {\n      console.error('Failed to extend session:', err);\n    }\n  };\n\n  if (!showWarning) return null;\n\n  return (\n    <SessionWarning>\n      Your session will expire in {timeLeft} minutes.\n      <SessionButton onClick={extendSession}>Extend Session</SessionButton>\n    </SessionWarning>\n  );\n};\n\nexport default SessionManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}