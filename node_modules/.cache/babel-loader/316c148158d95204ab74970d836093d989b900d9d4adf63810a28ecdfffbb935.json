{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = 'https://ziksrslyraqhygilcvct.supabase.co';\n\n// For React apps, environment variables MUST start with REACT_APP_\n// Vercel needs REACT_APP_SUPABASE_ANON_KEY (not NEXT_PUBLIC_)\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Debug logging for production troubleshooting\nconsole.log('Supabase Debug:', {\n  url: supabaseUrl,\n  hasKey: !!supabaseKey,\n  keyLength: supabaseKey ? supabaseKey.length : 0,\n  keyPrefix: supabaseKey ? supabaseKey.substring(0, 20) + '...' : 'none',\n  allReactEnvVars: Object.keys(process.env).filter(key => key.startsWith('REACT_APP_')),\n  nodeEnv: process.env.NODE_ENV\n});\n\n// Only create client if we have the key\nexport const supabase = supabaseKey ? createClient(supabaseUrl, supabaseKey) : null;\n\n// Helper function to check if Supabase is properly configured\nexport const isSupabaseConfigured = () => {\n  return supabaseUrl && supabaseKey && supabase !== null;\n};\n\n// Log final status\nconsole.log('Supabase Client Status:', {\n  configured: isSupabaseConfigured(),\n  clientExists: !!supabase\n});","map":{"version":3,"names":["createClient","supabaseUrl","supabaseKey","process","env","REACT_APP_SUPABASE_ANON_KEY","console","log","url","hasKey","keyLength","length","keyPrefix","substring","allReactEnvVars","Object","keys","filter","key","startsWith","nodeEnv","NODE_ENV","supabase","isSupabaseConfigured","configured","clientExists"],"sources":["/Users/alexanderamundsen/Documents/site/src/lib/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://ziksrslyraqhygilcvct.supabase.co'\n\n// For React apps, environment variables MUST start with REACT_APP_\n// Vercel needs REACT_APP_SUPABASE_ANON_KEY (not NEXT_PUBLIC_)\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY\n\n// Debug logging for production troubleshooting\nconsole.log('Supabase Debug:', {\n  url: supabaseUrl,\n  hasKey: !!supabaseKey,\n  keyLength: supabaseKey ? supabaseKey.length : 0,\n  keyPrefix: supabaseKey ? supabaseKey.substring(0, 20) + '...' : 'none',\n  allReactEnvVars: Object.keys(process.env).filter(key => key.startsWith('REACT_APP_')),\n  nodeEnv: process.env.NODE_ENV\n})\n\n// Only create client if we have the key\nexport const supabase = supabaseKey \n  ? createClient(supabaseUrl, supabaseKey)\n  : null\n\n// Helper function to check if Supabase is properly configured\nexport const isSupabaseConfigured = () => {\n  return supabaseUrl && supabaseKey && supabase !== null\n}\n\n// Log final status\nconsole.log('Supabase Client Status:', {\n  configured: isSupabaseConfigured(),\n  clientExists: !!supabase\n})"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAG,0CAA0C;;AAE9D;AACA;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;;AAE3D;AACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;EAC7BC,GAAG,EAAEP,WAAW;EAChBQ,MAAM,EAAE,CAAC,CAACP,WAAW;EACrBQ,SAAS,EAAER,WAAW,GAAGA,WAAW,CAACS,MAAM,GAAG,CAAC;EAC/CC,SAAS,EAAEV,WAAW,GAAGA,WAAW,CAACW,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM;EACtEC,eAAe,EAAEC,MAAM,CAACC,IAAI,CAACb,OAAO,CAACC,GAAG,CAAC,CAACa,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC;EACrFC,OAAO,EAAEjB,OAAO,CAACC,GAAG,CAACiB;AACvB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,QAAQ,GAAGpB,WAAW,GAC/BF,YAAY,CAACC,WAAW,EAAEC,WAAW,CAAC,GACtC,IAAI;;AAER;AACA,OAAO,MAAMqB,oBAAoB,GAAGA,CAAA,KAAM;EACxC,OAAOtB,WAAW,IAAIC,WAAW,IAAIoB,QAAQ,KAAK,IAAI;AACxD,CAAC;;AAED;AACAhB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;EACrCiB,UAAU,EAAED,oBAAoB,CAAC,CAAC;EAClCE,YAAY,EAAE,CAAC,CAACH;AAClB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}