{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderamundsen/Documents/site/src/components/Auth/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { supabase } from '../../lib/supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginWrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #fafbfa;\n`;\n_c = LoginWrapper;\nconst LoginCard = styled.form`\n  background: #fff;\n  border-radius: 18px;\n  box-shadow: 0 4px 32px 0 rgba(24,75,84,0.07);\n  padding: 3rem;\n  width: 100%;\n  max-width: 420px;\n`;\n_c2 = LoginCard;\nconst Title = styled.h2`\n  font-size: 2rem;\n  font-weight: 600;\n  color: #222;\n  margin: 0 0 2rem 0;\n  text-align: center;\n`;\n_c3 = Title;\nconst Input = styled.input`\n  width: 100%;\n  font-size: 1.1rem;\n  padding: 0.9rem 1.1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  margin-bottom: 1.2rem;\n  font-family: inherit;\n  transition: border-color 0.2s;\n  \n  &:focus {\n    outline: none;\n    border-color: #184B54;\n  }\n  \n  &:disabled {\n    background: #f5f5f5;\n    cursor: not-allowed;\n  }\n`;\n_c4 = Input;\nconst Button = styled.button`\n  width: 100%;\n  background: #184B54;\n  color: #fff;\n  font-size: 1.1rem;\n  font-weight: 600;\n  border: none;\n  border-radius: 8px;\n  padding: 0.9rem;\n  cursor: pointer;\n  transition: background 0.2s;\n  \n  &:hover:not(:disabled) {\n    background: #0f3238;\n  }\n  \n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n`;\n_c5 = Button;\nconst ErrorMessage = styled.div`\n  background: #fee;\n  color: #d32f2f;\n  padding: 0.8rem;\n  border-radius: 6px;\n  margin-bottom: 1.2rem;\n  font-size: 0.95rem;\n`;\n_c6 = ErrorMessage;\nconst LockoutMessage = styled.div`\n  background: #fff3e0;\n  color: #e65100;\n  padding: 1rem;\n  border-radius: 6px;\n  margin-bottom: 1.2rem;\n  text-align: center;\n`;\n_c7 = LockoutMessage;\nconst SuccessMessage = styled.div`\n  background: #e8f5e9;\n  color: #2e7d32;\n  padding: 0.8rem;\n  border-radius: 6px;\n  margin-bottom: 1.2rem;\n  font-size: 0.95rem;\n`;\n_c8 = SuccessMessage;\nconst LoginForm = () => {\n  _s();\n  var _process$env$REACT_AP;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [lockoutInfo, setLockoutInfo] = useState(null);\n  const [success, setSuccess] = useState('');\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const navigate = useNavigate();\n  const {\n    logSecurityEvent\n  } = useAuth();\n  useEffect(() => {\n    // Check for existing session only if Supabase is available\n    if (supabase) {\n      supabase.auth.getSession().then(({\n        data: {\n          session\n        }\n      }) => {\n        if (session) {\n          navigate('/admin');\n        }\n      });\n    }\n  }, [navigate]);\n  const checkLoginAttempts = async email => {\n    if (!supabase) return false;\n    try {\n      const {\n        data,\n        error\n      } = await supabase.rpc('check_login_attempts', {\n        user_email: email\n      });\n      if (!error && data && data[0]) {\n        const info = data[0];\n        if (info.is_locked) {\n          const lockExpiresAt = new Date(info.lock_expires_at);\n          const now = new Date();\n          const minutesLeft = Math.ceil((lockExpiresAt - now) / 60000);\n          setLockoutInfo({\n            isLocked: true,\n            minutesLeft,\n            attemptsCount: info.attempts_count\n          });\n          return true;\n        }\n      }\n      return false;\n    } catch (err) {\n      console.error('Failed to check login attempts:', err);\n      return false;\n    }\n  };\n  const logLoginAttempt = async (email, success, errorMessage = null) => {\n    if (!supabase) return;\n    try {\n      await supabase.from('login_attempts').insert({\n        email,\n        success,\n        error_message: errorMessage,\n        ip_address: null,\n        // Would get from server\n        user_agent: navigator.userAgent\n      });\n    } catch (err) {\n      console.error('Failed to log login attempt:', err);\n    }\n  };\n  const createSession = async userId => {\n    if (!supabase) return;\n    const sessionToken = crypto.randomUUID();\n    const expiresAt = new Date();\n    expiresAt.setHours(expiresAt.getHours() + 24); // 24 hour sessions\n\n    try {\n      await supabase.from('user_sessions').insert({\n        user_id: userId,\n        session_token: sessionToken,\n        expires_at: expiresAt.toISOString(),\n        ip_address: null,\n        // Would get from server\n        user_agent: navigator.userAgent\n      });\n\n      // Store session token in secure cookie or localStorage\n      localStorage.setItem('session_token', sessionToken);\n    } catch (err) {\n      console.error('Failed to create session:', err);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (loading) return;\n    console.log('🚀 Starting login process');\n    console.log('📧 Email:', email);\n    console.log('🔑 Password length:', password.length);\n    console.log('⚙️ Supabase available:', !!supabase);\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Temporary bypass for testing (remove in production)\n    if (email === 'admin@hepta.no' && password === 'hepta2025') {\n      console.log('🔓 Using temporary bypass for testing');\n      setSuccess('Temporary access granted - bypassing Supabase auth');\n      setTimeout(() => {\n        console.log('🏃‍♂️ Navigating to admin...');\n        navigate('/admin');\n      }, 1500);\n      setLoading(false);\n      return;\n    }\n    if (!supabase) {\n      console.error('❌ Supabase client not available');\n      setError('Authentication system not configured. Please contact support or use direct email: j@hepta.no');\n      setLoading(false);\n      return;\n    }\n    console.log('✅ Supabase client available, checking for account lockout...');\n\n    // Check if account is locked\n    const isLocked = await checkLoginAttempts(email);\n    if (isLocked) {\n      console.warn('🔒 Account is locked');\n      setLoading(false);\n      return;\n    }\n    console.log('✅ Account not locked, attempting authentication...');\n    try {\n      console.log('📡 Calling supabase.auth.signInWithPassword...');\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      console.log('📨 Supabase response received');\n      console.log('✅ Success data:', data ? 'Present' : 'None');\n      console.log('❌ Error data:', error ? 'Present' : 'None');\n      if (error) {\n        console.error('🚨 Authentication failed');\n        console.error('📋 Full error object:', error);\n        console.error('📝 Error details:', {\n          message: error.message,\n          status: error.status,\n          statusCode: error.statusCode,\n          name: error.name,\n          code: error.code,\n          details: error.details,\n          hint: error.hint\n        });\n        await logLoginAttempt(email, false, error.message);\n        console.log('📊 Login attempt logged as failed');\n\n        // Handle specific Supabase errors\n        let userFriendlyMessage = error.message;\n        if (error.message.includes('custom_access_token_hook')) {\n          console.warn('🔧 Auth error: custom_access_token_hook failed - this indicates a PostgreSQL function error in Supabase');\n          console.warn('💡 Solution: Go to Supabase Dashboard → Authentication → Settings → Disable \"Custom Access Token Hook\"');\n          userFriendlyMessage = `Supabase custom auth hook error. \n            This typically means:\n            • A PostgreSQL function in your Supabase project is failing\n            • Go to Supabase Dashboard → Authentication → Settings\n            • Disable \"Custom Access Token Hook\"\n            \n            For immediate access, use: admin@hepta.no / hepta2025`;\n        } else if (error.message.includes('output claims field is missing')) {\n          console.warn('🔧 Auth error: output claims field is missing - this may indicate Supabase auth configuration issues');\n          console.warn('💡 Potential solutions:');\n          console.warn('1. Check Supabase JWT configuration in dashboard');\n          console.warn('2. Verify REACT_APP_SUPABASE_ANON_KEY is correct');\n          console.warn('3. Check if Supabase project is properly configured');\n          console.warn('4. Verify email/password auth is enabled in Supabase');\n          userFriendlyMessage = `Supabase authentication configuration error. \n            This typically indicates:\n            • JWT settings need verification in Supabase dashboard\n            • Check that email/password auth is enabled\n            • Verify your environment variables\n            \n            If this persists, temporarily use direct email contact: j@hepta.no`;\n        } else if (error.message.includes('Invalid login credentials')) {\n          userFriendlyMessage = 'Invalid email or password. Please check your credentials and try again.';\n        } else if (error.message.includes('Email not confirmed')) {\n          userFriendlyMessage = 'Please check your email and click the confirmation link before logging in.';\n        } else if (error.message.includes('Too many requests')) {\n          userFriendlyMessage = 'Too many login attempts. Please wait a few minutes before trying again.';\n        } else if (error.message.includes('User not found')) {\n          userFriendlyMessage = 'No account found with this email address. Please check your email or contact support.';\n        }\n        setError(userFriendlyMessage);\n\n        // Check if this failed attempt triggers a lockout\n        console.log('🔍 Checking if this attempt triggers lockout...');\n        await checkLoginAttempts(email);\n      } else {\n        var _data$user, _data$user2, _data$user3, _data$user4, _data$session, _data$session2, _data$session3;\n        console.log('🎉 Authentication successful!');\n        console.log('👤 User data:', {\n          id: (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.id,\n          email: (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.email,\n          confirmed_at: (_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.email_confirmed_at,\n          last_sign_in_at: (_data$user4 = data.user) === null || _data$user4 === void 0 ? void 0 : _data$user4.last_sign_in_at\n        });\n        console.log('🎫 Session data:', {\n          access_token: (_data$session = data.session) !== null && _data$session !== void 0 && _data$session.access_token ? 'Present' : 'None',\n          refresh_token: (_data$session2 = data.session) !== null && _data$session2 !== void 0 && _data$session2.refresh_token ? 'Present' : 'None',\n          expires_at: (_data$session3 = data.session) === null || _data$session3 === void 0 ? void 0 : _data$session3.expires_at\n        });\n        await logLoginAttempt(email, true);\n        console.log('📊 Login attempt logged as successful');\n        await createSession(data.user.id);\n        console.log('🗂️ Session created');\n        setSuccess('Login successful! Redirecting...');\n        console.log('🏠 Redirecting to /admin in 1 second...');\n        setTimeout(() => {\n          navigate('/admin');\n        }, 1000);\n      }\n    } catch (err) {\n      console.error('💥 Unexpected error during login:');\n      console.error('📋 Error object:', err);\n      console.error('📝 Error details:', {\n        name: err.name,\n        message: err.message,\n        stack: err.stack\n      });\n      setError('An unexpected error occurred');\n    } finally {\n      setLoading(false);\n      console.log('🏁 Login attempt completed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginWrapper, {\n    children: /*#__PURE__*/_jsxDEV(LoginCard, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Login to Hepta Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), lockoutInfo && lockoutInfo.isLocked && /*#__PURE__*/_jsxDEV(LockoutMessage, {\n        children: [\"Account temporarily locked due to too many failed attempts. Please try again in \", lockoutInfo.minutesLeft, \" minutes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        disabled: loading || lockoutInfo && lockoutInfo.isLocked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        disabled: loading || lockoutInfo && lockoutInfo.isLocked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: loading || lockoutInfo && lockoutInfo.isLocked,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2rem',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setShowDebugInfo(!showDebugInfo),\n          style: {\n            background: 'none',\n            border: 'none',\n            color: '#666',\n            fontSize: '0.8rem',\n            cursor: 'pointer',\n            textDecoration: 'underline'\n          },\n          children: [showDebugInfo ? 'Hide' : 'Show', \" Debug Info\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), showDebugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          padding: '1rem',\n          background: '#f8f9fa',\n          borderRadius: '4px',\n          fontSize: '0.8rem',\n          color: '#666',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: '#333'\n          },\n          children: \"Supabase Configuration Debug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Environment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 18\n          }, this), \" \", process.env.NODE_ENV]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Supabase URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 18\n          }, this), \" https://ziksrslyraqhygilcvct.supabase.co\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Has API Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 18\n          }, this), \" \", !!process.env.REACT_APP_SUPABASE_ANON_KEY ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"API Key Length:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 18\n          }, this), \" \", ((_process$env$REACT_AP = process.env.REACT_APP_SUPABASE_ANON_KEY) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.length) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Client Exists:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 18\n          }, this), \" \", !!supabase ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Is Configured:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 18\n          }, this), \" \", !!supabase ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), !supabase && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.5rem',\n            color: '#d32f2f'\n          },\n          children: \"\\u26A0\\uFE0F Supabase client not initialized. Check environment variables.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.5rem',\n            fontSize: '0.7rem',\n            color: '#888'\n          },\n          children: [\"If you see \\\"output claims field is missing\\\", it usually means:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), \"\\u2022 Email/password auth not enabled in Supabase\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), \"\\u2022 JWT secret configuration issue\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), \"\\u2022 Invalid API key or URL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"U0i5EobMaUWDFkfkLTyVxrJe+4E=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c9 = LoginForm;\nexport default LoginForm;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"LoginWrapper\");\n$RefreshReg$(_c2, \"LoginCard\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"ErrorMessage\");\n$RefreshReg$(_c7, \"LockoutMessage\");\n$RefreshReg$(_c8, \"SuccessMessage\");\n$RefreshReg$(_c9, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","styled","supabase","useNavigate","useAuth","jsxDEV","_jsxDEV","LoginWrapper","div","_c","LoginCard","form","_c2","Title","h2","_c3","Input","input","_c4","Button","button","_c5","ErrorMessage","_c6","LockoutMessage","_c7","SuccessMessage","_c8","LoginForm","_s","_process$env$REACT_AP","email","setEmail","password","setPassword","loading","setLoading","error","setError","lockoutInfo","setLockoutInfo","success","setSuccess","showDebugInfo","setShowDebugInfo","navigate","logSecurityEvent","auth","getSession","then","data","session","checkLoginAttempts","rpc","user_email","info","is_locked","lockExpiresAt","Date","lock_expires_at","now","minutesLeft","Math","ceil","isLocked","attemptsCount","attempts_count","err","console","logLoginAttempt","errorMessage","from","insert","error_message","ip_address","user_agent","navigator","userAgent","createSession","userId","sessionToken","crypto","randomUUID","expiresAt","setHours","getHours","user_id","session_token","expires_at","toISOString","localStorage","setItem","handleSubmit","e","preventDefault","log","length","setTimeout","warn","signInWithPassword","message","status","statusCode","name","code","details","hint","userFriendlyMessage","includes","_data$user","_data$user2","_data$user3","_data$user4","_data$session","_data$session2","_data$session3","id","user","confirmed_at","email_confirmed_at","last_sign_in_at","access_token","refresh_token","stack","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","disabled","style","marginTop","textAlign","onClick","background","border","color","fontSize","cursor","textDecoration","padding","borderRadius","margin","process","env","NODE_ENV","REACT_APP_SUPABASE_ANON_KEY","_c9","$RefreshReg$"],"sources":["/Users/alexanderamundsen/Documents/site/src/components/Auth/LoginForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { supabase } from '../../lib/supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst LoginWrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #fafbfa;\n`;\n\nconst LoginCard = styled.form`\n  background: #fff;\n  border-radius: 18px;\n  box-shadow: 0 4px 32px 0 rgba(24,75,84,0.07);\n  padding: 3rem;\n  width: 100%;\n  max-width: 420px;\n`;\n\nconst Title = styled.h2`\n  font-size: 2rem;\n  font-weight: 600;\n  color: #222;\n  margin: 0 0 2rem 0;\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 1.1rem;\n  padding: 0.9rem 1.1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  margin-bottom: 1.2rem;\n  font-family: inherit;\n  transition: border-color 0.2s;\n  \n  &:focus {\n    outline: none;\n    border-color: #184B54;\n  }\n  \n  &:disabled {\n    background: #f5f5f5;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  background: #184B54;\n  color: #fff;\n  font-size: 1.1rem;\n  font-weight: 600;\n  border: none;\n  border-radius: 8px;\n  padding: 0.9rem;\n  cursor: pointer;\n  transition: background 0.2s;\n  \n  &:hover:not(:disabled) {\n    background: #0f3238;\n  }\n  \n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background: #fee;\n  color: #d32f2f;\n  padding: 0.8rem;\n  border-radius: 6px;\n  margin-bottom: 1.2rem;\n  font-size: 0.95rem;\n`;\n\nconst LockoutMessage = styled.div`\n  background: #fff3e0;\n  color: #e65100;\n  padding: 1rem;\n  border-radius: 6px;\n  margin-bottom: 1.2rem;\n  text-align: center;\n`;\n\nconst SuccessMessage = styled.div`\n  background: #e8f5e9;\n  color: #2e7d32;\n  padding: 0.8rem;\n  border-radius: 6px;\n  margin-bottom: 1.2rem;\n  font-size: 0.95rem;\n`;\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [lockoutInfo, setLockoutInfo] = useState(null);\n  const [success, setSuccess] = useState('');\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const navigate = useNavigate();\n  const { logSecurityEvent } = useAuth();\n\n  useEffect(() => {\n    // Check for existing session only if Supabase is available\n    if (supabase) {\n      supabase.auth.getSession().then(({ data: { session } }) => {\n        if (session) {\n          navigate('/admin');\n        }\n      });\n    }\n  }, [navigate]);\n\n  const checkLoginAttempts = async (email) => {\n    if (!supabase) return false;\n    \n    try {\n      const { data, error } = await supabase\n        .rpc('check_login_attempts', { user_email: email });\n      \n      if (!error && data && data[0]) {\n        const info = data[0];\n        if (info.is_locked) {\n          const lockExpiresAt = new Date(info.lock_expires_at);\n          const now = new Date();\n          const minutesLeft = Math.ceil((lockExpiresAt - now) / 60000);\n          \n          setLockoutInfo({\n            isLocked: true,\n            minutesLeft,\n            attemptsCount: info.attempts_count\n          });\n          return true;\n        }\n      }\n      return false;\n    } catch (err) {\n      console.error('Failed to check login attempts:', err);\n      return false;\n    }\n  };\n\n  const logLoginAttempt = async (email, success, errorMessage = null) => {\n    if (!supabase) return;\n    \n    try {\n      await supabase\n        .from('login_attempts')\n        .insert({\n          email,\n          success,\n          error_message: errorMessage,\n          ip_address: null, // Would get from server\n          user_agent: navigator.userAgent\n        });\n    } catch (err) {\n      console.error('Failed to log login attempt:', err);\n    }\n  };\n\n  const createSession = async (userId) => {\n    if (!supabase) return;\n    \n    const sessionToken = crypto.randomUUID();\n    const expiresAt = new Date();\n    expiresAt.setHours(expiresAt.getHours() + 24); // 24 hour sessions\n\n    try {\n      await supabase\n        .from('user_sessions')\n        .insert({\n          user_id: userId,\n          session_token: sessionToken,\n          expires_at: expiresAt.toISOString(),\n          ip_address: null, // Would get from server\n          user_agent: navigator.userAgent\n        });\n      \n      // Store session token in secure cookie or localStorage\n      localStorage.setItem('session_token', sessionToken);\n    } catch (err) {\n      console.error('Failed to create session:', err);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (loading) return;\n\n    console.log('🚀 Starting login process');\n    console.log('📧 Email:', email);\n    console.log('🔑 Password length:', password.length);\n    console.log('⚙️ Supabase available:', !!supabase);\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Temporary bypass for testing (remove in production)\n    if (email === 'admin@hepta.no' && password === 'hepta2025') {\n      console.log('🔓 Using temporary bypass for testing');\n      setSuccess('Temporary access granted - bypassing Supabase auth');\n      setTimeout(() => {\n        console.log('🏃‍♂️ Navigating to admin...');\n        navigate('/admin');\n      }, 1500);\n      setLoading(false);\n      return;\n    }\n\n    if (!supabase) {\n      console.error('❌ Supabase client not available');\n      setError('Authentication system not configured. Please contact support or use direct email: j@hepta.no');\n      setLoading(false);\n      return;\n    }\n\n    console.log('✅ Supabase client available, checking for account lockout...');\n\n    // Check if account is locked\n    const isLocked = await checkLoginAttempts(email);\n    if (isLocked) {\n      console.warn('🔒 Account is locked');\n      setLoading(false);\n      return;\n    }\n\n    console.log('✅ Account not locked, attempting authentication...');\n\n    try {\n      console.log('📡 Calling supabase.auth.signInWithPassword...');\n      \n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n\n      console.log('📨 Supabase response received');\n      console.log('✅ Success data:', data ? 'Present' : 'None');\n      console.log('❌ Error data:', error ? 'Present' : 'None');\n\n      if (error) {\n        console.error('🚨 Authentication failed');\n        console.error('📋 Full error object:', error);\n        console.error('📝 Error details:', {\n          message: error.message,\n          status: error.status,\n          statusCode: error.statusCode,\n          name: error.name,\n          code: error.code,\n          details: error.details,\n          hint: error.hint\n        });\n        \n        await logLoginAttempt(email, false, error.message);\n        console.log('📊 Login attempt logged as failed');\n        \n        // Handle specific Supabase errors\n        let userFriendlyMessage = error.message;\n        \n        if (error.message.includes('custom_access_token_hook')) {\n          console.warn('🔧 Auth error: custom_access_token_hook failed - this indicates a PostgreSQL function error in Supabase');\n          console.warn('💡 Solution: Go to Supabase Dashboard → Authentication → Settings → Disable \"Custom Access Token Hook\"');\n          \n          userFriendlyMessage = `Supabase custom auth hook error. \n            This typically means:\n            • A PostgreSQL function in your Supabase project is failing\n            • Go to Supabase Dashboard → Authentication → Settings\n            • Disable \"Custom Access Token Hook\"\n            \n            For immediate access, use: admin@hepta.no / hepta2025`;\n        } else if (error.message.includes('output claims field is missing')) {\n          console.warn('🔧 Auth error: output claims field is missing - this may indicate Supabase auth configuration issues');\n          console.warn('💡 Potential solutions:');\n          console.warn('1. Check Supabase JWT configuration in dashboard');\n          console.warn('2. Verify REACT_APP_SUPABASE_ANON_KEY is correct');\n          console.warn('3. Check if Supabase project is properly configured');\n          console.warn('4. Verify email/password auth is enabled in Supabase');\n          \n          userFriendlyMessage = `Supabase authentication configuration error. \n            This typically indicates:\n            • JWT settings need verification in Supabase dashboard\n            • Check that email/password auth is enabled\n            • Verify your environment variables\n            \n            If this persists, temporarily use direct email contact: j@hepta.no`;\n        } else if (error.message.includes('Invalid login credentials')) {\n          userFriendlyMessage = 'Invalid email or password. Please check your credentials and try again.';\n        } else if (error.message.includes('Email not confirmed')) {\n          userFriendlyMessage = 'Please check your email and click the confirmation link before logging in.';\n        } else if (error.message.includes('Too many requests')) {\n          userFriendlyMessage = 'Too many login attempts. Please wait a few minutes before trying again.';\n        } else if (error.message.includes('User not found')) {\n          userFriendlyMessage = 'No account found with this email address. Please check your email or contact support.';\n        }\n        \n        setError(userFriendlyMessage);\n        \n        // Check if this failed attempt triggers a lockout\n        console.log('🔍 Checking if this attempt triggers lockout...');\n        await checkLoginAttempts(email);\n      } else {\n        console.log('🎉 Authentication successful!');\n        console.log('👤 User data:', {\n          id: data.user?.id,\n          email: data.user?.email,\n          confirmed_at: data.user?.email_confirmed_at,\n          last_sign_in_at: data.user?.last_sign_in_at\n        });\n        console.log('🎫 Session data:', {\n          access_token: data.session?.access_token ? 'Present' : 'None',\n          refresh_token: data.session?.refresh_token ? 'Present' : 'None',\n          expires_at: data.session?.expires_at\n        });\n        \n        await logLoginAttempt(email, true);\n        console.log('📊 Login attempt logged as successful');\n        \n        await createSession(data.user.id);\n        console.log('🗂️ Session created');\n        \n        setSuccess('Login successful! Redirecting...');\n        \n        console.log('🏠 Redirecting to /admin in 1 second...');\n        setTimeout(() => {\n          navigate('/admin');\n        }, 1000);\n      }\n    } catch (err) {\n      console.error('💥 Unexpected error during login:');\n      console.error('📋 Error object:', err);\n      console.error('📝 Error details:', {\n        name: err.name,\n        message: err.message,\n        stack: err.stack\n      });\n      setError('An unexpected error occurred');\n    } finally {\n      setLoading(false);\n      console.log('🏁 Login attempt completed');\n    }\n  };\n\n  return (\n    <LoginWrapper>\n      <LoginCard onSubmit={handleSubmit}>\n        <Title>Login to Hepta Admin</Title>\n        \n        {lockoutInfo && lockoutInfo.isLocked && (\n          <LockoutMessage>\n            Account temporarily locked due to too many failed attempts.\n            Please try again in {lockoutInfo.minutesLeft} minutes.\n          </LockoutMessage>\n        )}\n        \n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {success && <SuccessMessage>{success}</SuccessMessage>}\n        \n        <Input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          disabled={loading || (lockoutInfo && lockoutInfo.isLocked)}\n        />\n        \n        <Input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          disabled={loading || (lockoutInfo && lockoutInfo.isLocked)}\n        />\n        \n        <Button \n          type=\"submit\" \n          disabled={loading || (lockoutInfo && lockoutInfo.isLocked)}\n        >\n          {loading ? 'Logging in...' : 'Login'}\n        </Button>\n        \n        {/* Debug Info Section */}\n        <div style={{ marginTop: '2rem', textAlign: 'center' }}>\n          <button\n            type=\"button\"\n            onClick={() => setShowDebugInfo(!showDebugInfo)}\n            style={{\n              background: 'none',\n              border: 'none',\n              color: '#666',\n              fontSize: '0.8rem',\n              cursor: 'pointer',\n              textDecoration: 'underline'\n            }}\n          >\n            {showDebugInfo ? 'Hide' : 'Show'} Debug Info\n          </button>\n        </div>\n        \n        {showDebugInfo && (\n          <div style={{\n            marginTop: '1rem',\n            padding: '1rem',\n            background: '#f8f9fa',\n            borderRadius: '4px',\n            fontSize: '0.8rem',\n            color: '#666',\n            textAlign: 'left'\n          }}>\n            <h4 style={{ margin: '0 0 0.5rem 0', color: '#333' }}>Supabase Configuration Debug</h4>\n            <div><strong>Environment:</strong> {process.env.NODE_ENV}</div>\n            <div><strong>Supabase URL:</strong> https://ziksrslyraqhygilcvct.supabase.co</div>\n            <div><strong>Has API Key:</strong> {!!process.env.REACT_APP_SUPABASE_ANON_KEY ? 'Yes' : 'No'}</div>\n            <div><strong>API Key Length:</strong> {process.env.REACT_APP_SUPABASE_ANON_KEY?.length || 0}</div>\n            <div><strong>Client Exists:</strong> {!!supabase ? 'Yes' : 'No'}</div>\n            <div><strong>Is Configured:</strong> {!!supabase ? 'Yes' : 'No'}</div>\n            \n            {!supabase && (\n              <div style={{ marginTop: '0.5rem', color: '#d32f2f' }}>\n                ⚠️ Supabase client not initialized. Check environment variables.\n              </div>\n            )}\n            \n            <div style={{ marginTop: '0.5rem', fontSize: '0.7rem', color: '#888' }}>\n              If you see \"output claims field is missing\", it usually means:\n              <br />• Email/password auth not enabled in Supabase\n              <br />• JWT secret configuration issue\n              <br />• Invalid API key or URL\n            </div>\n          </div>\n        )}\n      </LoginCard>\n    </LoginWrapper>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}